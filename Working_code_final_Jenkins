def packerTool = 'Packer'
pipeline {
    agent any
    
    tools {
         maven 'Maven' 
        'biz.neustar.jenkins.plugins.packer.PackerInstallation' "$packerTool"
        
    }

    stages {
        stage ("git for image building using maven") {
            steps {
                git 'https://github.com/k123-v/Devopsmaven.git'
            }
        }
                stage('Intalize using maven and build war/jar file using it') {
            steps {
                sh "mvn clean install"
            }
        }
        stage("Run Packer to create a custom AMI") {
            steps {
                sh 'rm -rf Apr-Project'
                sh 'git clone https://github.com/k123-v/Apr-Project.git'
                sh '''
                   cd Apr-Project
                   packer build mypacker.json
                   '''
            }
        }
        stage("Run Terraform using Packer AMI") {
            steps {
                sh 'rm -rf Apr-Project'
                sh 'git clone https://github.com/k123-v/Apr-Project.git'
                sh '''
                   cd Apr-Project
                   terraform init
                   terraform plan
                   terraform apply --auto-approve
                   sleep 150
                   '''
                
            }
        }
        stage("copy war/file from maven to tomcat server") {
            steps {
                sshagent(credentials: ['deploy']) {
                    sh '''
                       scp -o StrictHostKeyChecking=no -i /home/ubuntu/.ssh/feb25key.pem webapp/target/webapp.war ubuntu@172.31.90.136:/tmp
                       '''
                }
                    
            }
        }
        stage("Connect to AMI Machine,add public key and Run Ansible playbook to pull and build a customized docker image") {
            steps {
                sshagent(credentials: ['deploy']) {
                    sh '''
                       ssh -o StrictHostKeyChecking=no ubuntu@172.31.90.136 "sudo sed -i 's/#host_key_checking = False/host_key_checking = False/ g' /etc/ansible/ansible.cfg && cd .ssh/ && ssh-keygen -f id_rsa -t rsa -N '' && cat id_rsa.pub >> authorized_keys && hostname && cd ..&& git clone https://github.com/k123-v/Apr-Project.git && cd Apr-Project && ansible-playbook -i hosts.inv Build_image.yaml"
                       '''
                    
                }
                    
            }
        }
        stage("Connect to AMI Machine and run docker commands to start webapp in a docker in customized image from dockerfile") {
            steps {
                sshagent(credentials: ['deploy']) {
                    sh '''
                       ssh -o StrictHostKeyChecking=no ubuntu@172.31.90.136 "sudo docker run -dit -p 8080:8080 --name="webapp" ubuntu_ansible:ex1 && sudo docker exec -dit webapp nohup /opt/tomcat/apache-tomcat-8.5.69/bin/./startup.sh &"
                       '''
                    
                }
                    
            }
        }
		stage("Connect to Docker Container and copy application war file to Docker Container") {
            steps {
                sshagent(credentials: ['deploy']) {
                    sh '''
                       ssh -o StrictHostKeyChecking=no ubuntu@172.31.90.136 "sudo docker cp /tmp/webapp.war webapp:/opt/tomcat/apache-tomcat-8.5.69/webapps/" 
                       '''
                    
                }
                    
            }
        }
        
   }
}


